/*
 * generated by Xtext 2.38.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldType
entryRuleFieldType
:
{ before(grammarAccess.getFieldTypeRule()); }
	 ruleFieldType
{ after(grammarAccess.getFieldTypeRule()); } 
	 EOF 
;

// Rule FieldType
ruleFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldTypeAccess().getGroup()); }
		(rule__FieldType__Group__0)
		{ after(grammarAccess.getFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnionType
entryRuleUnionType
:
{ before(grammarAccess.getUnionTypeRule()); }
	 ruleUnionType
{ after(grammarAccess.getUnionTypeRule()); } 
	 EOF 
;

// Rule UnionType
ruleUnionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnionTypeAccess().getGroup()); }
		(rule__UnionType__Group__0)
		{ after(grammarAccess.getUnionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleType
entryRuleSimpleType
:
{ before(grammarAccess.getSimpleTypeRule()); }
	 ruleSimpleType
{ after(grammarAccess.getSimpleTypeRule()); } 
	 EOF 
;

// Rule SimpleType
ruleSimpleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
		(rule__SimpleType__Alternatives)
		{ after(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getValueAssignment()); }
		(rule__PrimitiveType__ValueAssignment)
		{ after(grammarAccess.getPrimitiveTypeAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefType
entryRuleRefType
:
{ before(grammarAccess.getRefTypeRule()); }
	 ruleRefType
{ after(grammarAccess.getRefTypeRule()); } 
	 EOF 
;

// Rule RefType
ruleRefType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefTypeAccess().getTypeAssignment()); }
		(rule__RefType__TypeAssignment)
		{ after(grammarAccess.getRefTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDef
entryRuleVarDef
:
{ before(grammarAccess.getVarDefRule()); }
	 ruleVarDef
{ after(grammarAccess.getVarDefRule()); } 
	 EOF 
;

// Rule VarDef
ruleVarDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDefAccess().getGroup()); }
		(rule__VarDef__Group__0)
		{ after(grammarAccess.getVarDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructValue
entryRuleStructValue
:
{ before(grammarAccess.getStructValueRule()); }
	 ruleStructValue
{ after(grammarAccess.getStructValueRule()); } 
	 EOF 
;

// Rule StructValue
ruleStructValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructValueAccess().getGroup()); }
		(rule__StructValue__Group__0)
		{ after(grammarAccess.getStructValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldValue
entryRuleFieldValue
:
{ before(grammarAccess.getFieldValueRule()); }
	 ruleFieldValue
{ after(grammarAccess.getFieldValueRule()); } 
	 EOF 
;

// Rule FieldValue
ruleFieldValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldValueAccess().getGroup()); }
		(rule__FieldValue__Group__0)
		{ after(grammarAccess.getFieldValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarRef
entryRuleVarRef
:
{ before(grammarAccess.getVarRefRule()); }
	 ruleVarRef
{ after(grammarAccess.getVarRefRule()); } 
	 EOF 
;

// Rule VarRef
ruleVarRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarRefAccess().getRefAssignment()); }
		(rule__VarRef__RefAssignment)
		{ after(grammarAccess.getVarRefAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayValue
entryRuleArrayValue
:
{ before(grammarAccess.getArrayValueRule()); }
	 ruleArrayValue
{ after(grammarAccess.getArrayValueRule()); } 
	 EOF 
;

// Rule ArrayValue
ruleArrayValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayValueAccess().getGroup()); }
		(rule__ArrayValue__Group__0)
		{ after(grammarAccess.getArrayValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment()); }
		(rule__NumberLiteral__ValueAssignment)
		{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getSimpleTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleTypeAccess().getRefTypeParserRuleCall_1()); }
		ruleRefType
		{ after(grammarAccess.getSimpleTypeAccess().getRefTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getValueStringKeyword_0_0()); }
		'string'
		{ after(grammarAccess.getPrimitiveTypeAccess().getValueStringKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getValueNumberKeyword_0_1()); }
		'number'
		{ after(grammarAccess.getPrimitiveTypeAccess().getValueNumberKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getLiteralParserRuleCall_0()); }
		ruleLiteral
		{ after(grammarAccess.getValueAccess().getLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getVarRefParserRuleCall_1()); }
		ruleVarRef
		{ after(grammarAccess.getValueAccess().getVarRefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getArrayValueParserRuleCall_2()); }
		ruleArrayValue
		{ after(grammarAccess.getValueAccess().getArrayValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getStructValueParserRuleCall_3()); }
		ruleStructValue
		{ after(grammarAccess.getValueAccess().getStructValueParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_1()); }
		ruleNumberLiteral
		{ after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSystemKeyword_0()); }
	'system'
	{ after(grammarAccess.getModelAccess().getSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTypesAssignment_2()); }
	(rule__Model__TypesAssignment_2)*
	{ after(grammarAccess.getModelAccess().getTypesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getVarsAssignment_3()); }
	(rule__Model__VarsAssignment_3)*
	{ after(grammarAccess.getModelAccess().getVarsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypeDefAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
	rule__TypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
	(rule__TypeDef__NameAssignment_1)
	{ after(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__2__Impl
	rule__TypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getTypeDefAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__3__Impl
	rule__TypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTypeDefAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__4__Impl
	rule__TypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getGroup_4()); }
	(rule__TypeDef__Group_4__0)?
	{ after(grammarAccess.getTypeDefAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTypeDefAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_4__0__Impl
	rule__TypeDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getFieldsAssignment_4_0()); }
	(rule__TypeDef__FieldsAssignment_4_0)
	{ after(grammarAccess.getTypeDefAccess().getFieldsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getGroup_4_1()); }
	(rule__TypeDef__Group_4_1__0)*
	{ after(grammarAccess.getTypeDefAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_4_1__0__Impl
	rule__TypeDef__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getTypeDefAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getFieldsAssignment_4_1_1()); }
	(rule__TypeDef__FieldsAssignment_4_1_1)
	{ after(grammarAccess.getTypeDefAccess().getFieldsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_0()); }
	(rule__Field__NameAssignment_0)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_2()); }
	(rule__Field__TypeAssignment_2)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldType__Group__0__Impl
	rule__FieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldTypeAccess().getUnionAssignment_0()); }
	(rule__FieldType__UnionAssignment_0)
	{ after(grammarAccess.getFieldTypeAccess().getUnionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldTypeAccess().getArrayAssignment_1()); }
	(rule__FieldType__ArrayAssignment_1)?
	{ after(grammarAccess.getFieldTypeAccess().getArrayAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionType__Group__0__Impl
	rule__UnionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionTypeAccess().getTypesAssignment_0()); }
	(rule__UnionType__TypesAssignment_0)
	{ after(grammarAccess.getUnionTypeAccess().getTypesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionTypeAccess().getGroup_1()); }
	(rule__UnionType__Group_1__0)*
	{ after(grammarAccess.getUnionTypeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnionType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionType__Group_1__0__Impl
	rule__UnionType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionTypeAccess().getVerticalLineKeyword_1_0()); }
	'|'
	{ after(grammarAccess.getUnionTypeAccess().getVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionTypeAccess().getTypesAssignment_1_1()); }
	(rule__UnionType__TypesAssignment_1_1)
	{ after(grammarAccess.getUnionTypeAccess().getTypesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDef__Group__0__Impl
	rule__VarDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDefAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVarDefAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDef__Group__1__Impl
	rule__VarDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDefAccess().getNameAssignment_1()); }
	(rule__VarDef__NameAssignment_1)
	{ after(grammarAccess.getVarDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDef__Group__2__Impl
	rule__VarDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDefAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getVarDefAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDef__Group__3__Impl
	rule__VarDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDefAccess().getTypeAssignment_3()); }
	(rule__VarDef__TypeAssignment_3)
	{ after(grammarAccess.getVarDefAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDef__Group__4__Impl
	rule__VarDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDefAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getVarDefAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDefAccess().getValueAssignment_5()); }
	(rule__VarDef__ValueAssignment_5)
	{ after(grammarAccess.getVarDefAccess().getValueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructValue__Group__0__Impl
	rule__StructValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructValueAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getStructValueAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructValue__Group__1__Impl
	rule__StructValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructValueAccess().getGroup_1()); }
	(rule__StructValue__Group_1__0)?
	{ after(grammarAccess.getStructValueAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructValueAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getStructValueAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructValue__Group_1__0__Impl
	rule__StructValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructValueAccess().getEntriesAssignment_1_0()); }
	(rule__StructValue__EntriesAssignment_1_0)
	{ after(grammarAccess.getStructValueAccess().getEntriesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructValueAccess().getGroup_1_1()); }
	(rule__StructValue__Group_1_1__0)*
	{ after(grammarAccess.getStructValueAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructValue__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructValue__Group_1_1__0__Impl
	rule__StructValue__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructValueAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getStructValueAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructValue__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructValueAccess().getEntriesAssignment_1_1_1()); }
	(rule__StructValue__EntriesAssignment_1_1_1)
	{ after(grammarAccess.getStructValueAccess().getEntriesAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldValue__Group__0__Impl
	rule__FieldValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldValueAccess().getNameAssignment_0()); }
	(rule__FieldValue__NameAssignment_0)
	{ after(grammarAccess.getFieldValueAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldValue__Group__1__Impl
	rule__FieldValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldValueAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFieldValueAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldValueAccess().getValueAssignment_2()); }
	(rule__FieldValue__ValueAssignment_2)
	{ after(grammarAccess.getFieldValueAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__0__Impl
	rule__ArrayValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__1__Impl
	rule__ArrayValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getGroup_1()); }
	(rule__ArrayValue__Group_1__0)?
	{ after(grammarAccess.getArrayValueAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_1__0__Impl
	rule__ArrayValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getElementsAssignment_1_0()); }
	(rule__ArrayValue__ElementsAssignment_1_0)
	{ after(grammarAccess.getArrayValueAccess().getElementsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getGroup_1_1()); }
	(rule__ArrayValue__Group_1_1__0)*
	{ after(grammarAccess.getArrayValueAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_1_1__0__Impl
	rule__ArrayValue__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getArrayValueAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getElementsAssignment_1_1_1()); }
	(rule__ArrayValue__ElementsAssignment_1_1_1)
	{ after(grammarAccess.getArrayValueAccess().getElementsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TypesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTypesTypeDefParserRuleCall_2_0()); }
		ruleTypeDef
		{ after(grammarAccess.getModelAccess().getTypesTypeDefParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__VarsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getVarsVarDefParserRuleCall_3_0()); }
		ruleVarDef
		{ after(grammarAccess.getModelAccess().getVarsVarDefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__FieldsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getFieldsFieldParserRuleCall_4_0_0()); }
		ruleField
		{ after(grammarAccess.getTypeDefAccess().getFieldsFieldParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__FieldsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getFieldsFieldParserRuleCall_4_1_1_0()); }
		ruleField
		{ after(grammarAccess.getTypeDefAccess().getFieldsFieldParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeFieldTypeParserRuleCall_2_0()); }
		ruleFieldType
		{ after(grammarAccess.getFieldAccess().getTypeFieldTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__UnionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldTypeAccess().getUnionUnionTypeParserRuleCall_0_0()); }
		ruleUnionType
		{ after(grammarAccess.getFieldTypeAccess().getUnionUnionTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__ArrayAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_1_0()); }
		(
			{ before(grammarAccess.getFieldTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_1_0()); }
			'[]'
			{ after(grammarAccess.getFieldTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_1_0()); }
		)
		{ after(grammarAccess.getFieldTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__TypesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnionTypeAccess().getTypesSimpleTypeParserRuleCall_0_0()); }
		ruleSimpleType
		{ after(grammarAccess.getUnionTypeAccess().getTypesSimpleTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionType__TypesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnionTypeAccess().getTypesSimpleTypeParserRuleCall_1_1_0()); }
		ruleSimpleType
		{ after(grammarAccess.getUnionTypeAccess().getTypesSimpleTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getValueAlternatives_0()); }
		(rule__PrimitiveType__ValueAlternatives_0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefTypeAccess().getTypeTypeDefCrossReference_0()); }
		(
			{ before(grammarAccess.getRefTypeAccess().getTypeTypeDefIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRefTypeAccess().getTypeTypeDefIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRefTypeAccess().getTypeTypeDefCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDefAccess().getTypeTypeDefCrossReference_3_0()); }
		(
			{ before(grammarAccess.getVarDefAccess().getTypeTypeDefIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarDefAccess().getTypeTypeDefIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getVarDefAccess().getTypeTypeDefCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDefAccess().getValueStructValueParserRuleCall_5_0()); }
		ruleStructValue
		{ after(grammarAccess.getVarDefAccess().getValueStructValueParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__EntriesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructValueAccess().getEntriesFieldValueParserRuleCall_1_0_0()); }
		ruleFieldValue
		{ after(grammarAccess.getStructValueAccess().getEntriesFieldValueParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructValue__EntriesAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructValueAccess().getEntriesFieldValueParserRuleCall_1_1_1_0()); }
		ruleFieldValue
		{ after(grammarAccess.getStructValueAccess().getEntriesFieldValueParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldValue__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldValueAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldValueAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldValue__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldValueAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getFieldValueAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRef__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarRefAccess().getRefVarDefCrossReference_0()); }
		(
			{ before(grammarAccess.getVarRefAccess().getRefVarDefIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarRefAccess().getRefVarDefIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVarRefAccess().getRefVarDefCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__ElementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getElementsValueParserRuleCall_1_0_0()); }
		ruleValue
		{ after(grammarAccess.getArrayValueAccess().getElementsValueParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__ElementsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getElementsValueParserRuleCall_1_1_1_0()); }
		ruleValue
		{ after(grammarAccess.getArrayValueAccess().getElementsValueParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberLiteralAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
